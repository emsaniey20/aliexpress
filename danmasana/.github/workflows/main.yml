name: Flutter Build and Firebase Test Lab

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Install Flutter
      run: |
        git clone https://github.com/flutter/flutter.git -b stable
        echo "${{ github.workspace }}/flutter/bin" >> $GITHUB_PATH

    - name: Install Dependencies
      run: flutter pub get

    - name: Create Native Splash Screen
      run: flutter pub run flutter_native_splash:create

    - name: Decode Keystore from Base64
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > ./android/app/my-release-key.jks
        keytool -v -list -keystore ./android/app/my-release-key.keystore \
          -storepass ${{ secrets.KEYSTORE_PASSWORD }} \
          -noprompt

    - name: Build App Bundle
      run: flutter build appbundle --release

    - name: Upload App Bundle as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: flutter_app_bundle
        path: build/app/outputs/bundle/release/app-release.aab

    - name: Install Firebase CLI
      run: |
        curl -sL https://firebase.tools | bash
        firebase --version

    - name: Authenticate with Firebase
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
      run: |
        echo "${GOOGLE_APPLICATION_CREDENTIALS}" > "$HOME/service-account.json"
        gcloud auth activate-service-account --key-file="$HOME/service-account.json"
        gcloud config set project mikrudata

    - name: Upload to Firebase Test Lab
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
      run: |
        firebase test android run \
          --app build/app/outputs/bundle/release/app-release.aab \
          --device model=Pixel5,version=30,locale=en,orientation=portrait \
          --timeout 30m

    - name: Cleanup
      run: rm "$HOME/service-account.json"
