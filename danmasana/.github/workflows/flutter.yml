name: Flutter Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Install Flutter
      run: |
        git clone https://github.com/flutter/flutter.git -b stable
        echo "${{ github.workspace }}/flutter/bin" >> $GITHUB_PATH

    - name: Install Dependencies
      run: flutter pub get

    - name: Create Native Splash Screen
      run: flutter pub run flutter_native_splash:create

    # Decode the Base64 keystore and save it as a .jks file
    - name: Decode Keystore from Base64
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > ./android/app/my-release-key.jks
        # Check if the file was created successfully
        ls -l ./android/app/my-release-key.jks
        keytool -v -list -keystore ./android/app/my-release-key.jks \
          -storepass ${{ secrets.KEYSTORE_PASSWORD }} \
          -noprompt

    # Build the app bundle
    - name: Build App Bundle
      run: |
        flutter build appbundle --release

    # Sign the app bundle using Gradle
    - name: Sign App Bundle
      run: |
        ./gradlew bundleRelease -Pandroid.injected.signing.store.file=./android/app/my-release-key.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

    # Upload the AAB file as an artifact
    - name: Upload AAB
      uses: actions/upload-artifact@v3
      with:
        name: flutter_app_aab
        path: build/app/outputs/bundle/release/app-release.aab
